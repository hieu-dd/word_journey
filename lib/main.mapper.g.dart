// This file has been generated by the dart_json_mapper v2.2.13
// https://github.com/k-paxian/dart-json-mapper
// @dart = 2.12
import 'common/model/topic.dart' as x1 show Topic;
import 'common/model/word.dart' as x0 show Word;
import 'common/model/word_type.dart' as x2 show WordType;
import 'package:dart_json_mapper/dart_json_mapper.dart' show JsonMapper, JsonMapperAdapter, SerializationOptions, DeserializationOptions, typeOf;
// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
import 'dart:core';
import 'package:dart_json_mapper/src/model/annotations.dart' as prefix0;
import 'package:word_journey/common/model/topic.dart' as prefix3;
import 'package:word_journey/common/model/word.dart' as prefix1;
import 'package:word_journey/common/model/word_type.dart' as prefix2;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: unused_import

import 'package:reflectable/mirrors.dart' as m;
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{const prefix0.JsonSerializable(): r.ReflectorData(<m.TypeMirror>[r.NonGenericClassMirrorImpl(r'Word', r'.Word', 134217735, 0, const prefix0.JsonSerializable(), const <int>[0, 1, 2, 3, 4, 5, 6, 19], const <int>[20, 6, 21, 22, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], const <int>[], -1, {}, {}, {r'': (bool b) => ({text, meanings, wordTypes, topics, pronunciation, examples = const []}) => b ? prefix1.Word(examples: examples, meanings: meanings, pronunciation: pronunciation, text: text, topics: topics, wordTypes: wordTypes) : null}, -1, 0, const <int>[], const [prefix0.jsonSerializable], null)], <m.DeclarationMirror>[r.VariableMirrorImpl(r'text', 134348805, 0, const prefix0.JsonSerializable(), -1, 1, 1, const <int>[], const []), r.VariableMirrorImpl(r'meanings', 151126021, 0, const prefix0.JsonSerializable(), -1, 2, 3, const <int>[1], const []), r.VariableMirrorImpl(r'wordTypes', 151126021, 0, const prefix0.JsonSerializable(), -1, 4, 5, const <int>[6], const []), r.VariableMirrorImpl(r'topics', 151126021, 0, const prefix0.JsonSerializable(), -1, 7, 8, const <int>[9], const []), r.VariableMirrorImpl(r'pronunciation', 134348805, 0, const prefix0.JsonSerializable(), -1, 1, 1, const <int>[], const []), r.VariableMirrorImpl(r'examples', 151126021, 0, const prefix0.JsonSerializable(), -1, 2, 3, const <int>[1], const []), r.MethodMirrorImpl(r'toString', 2097154, 0, -1, 1, 1, const <int>[], const <int>[], const prefix0.JsonSerializable(), const [override]), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 0, 7), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 0, 8), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 1, 9), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 1, 10), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 2, 11), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 2, 12), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 3, 13), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 3, 14), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 4, 15), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 4, 16), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 5, 17), r.ImplicitSetterMirrorImpl(const prefix0.JsonSerializable(), 5, 18), r.MethodMirrorImpl(r'', 0, 0, -1, 0, 0, const <int>[], const <int>[0, 1, 2, 3, 4, 5], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'==', 2097154, -1, -1, 10, 10, const <int>[], const <int>[12], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'noSuchMethod', 524290, -1, -1, -1, -1, const <int>[], const <int>[13], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'hashCode', 2097155, -1, -1, 11, 11, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'runtimeType', 2097155, -1, -1, 12, 12, const <int>[], const <int>[], const prefix0.JsonSerializable(), const [])], <m.ParameterMirror>[r.ParameterMirrorImpl(r'text', 134358022, 19, const prefix0.JsonSerializable(), -1, 1, 1, const <int>[], const [], null, #text), r.ParameterMirrorImpl(r'meanings', 151135238, 19, const prefix0.JsonSerializable(), -1, 2, 3, const <int>[1], const [], null, #meanings), r.ParameterMirrorImpl(r'wordTypes', 151135238, 19, const prefix0.JsonSerializable(), -1, 4, 5, const <int>[6], const [], null, #wordTypes), r.ParameterMirrorImpl(r'topics', 151135238, 19, const prefix0.JsonSerializable(), -1, 7, 8, const <int>[9], const [], null, #topics), r.ParameterMirrorImpl(r'pronunciation', 134358022, 19, const prefix0.JsonSerializable(), -1, 1, 1, const <int>[], const [], null, #pronunciation), r.ParameterMirrorImpl(r'examples', 151141382, 19, const prefix0.JsonSerializable(), -1, 2, 3, const <int>[1], const [], const [], #examples), r.ParameterMirrorImpl(r'_text', 134348902, 8, const prefix0.JsonSerializable(), -1, 1, 1, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_meanings', 151126118, 10, const prefix0.JsonSerializable(), -1, 2, 3, const <int>[1], const [], null, null), r.ParameterMirrorImpl(r'_wordTypes', 151126118, 12, const prefix0.JsonSerializable(), -1, 4, 5, const <int>[6], const [], null, null), r.ParameterMirrorImpl(r'_topics', 151126118, 14, const prefix0.JsonSerializable(), -1, 7, 8, const <int>[9], const [], null, null), r.ParameterMirrorImpl(r'_pronunciation', 134348902, 16, const prefix0.JsonSerializable(), -1, 1, 1, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'_examples', 151126118, 18, const prefix0.JsonSerializable(), -1, 2, 3, const <int>[1], const [], null, null), r.ParameterMirrorImpl(r'other', 134348806, 20, const prefix0.JsonSerializable(), -1, 13, 13, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'invocation', 134348806, 21, const prefix0.JsonSerializable(), -1, 14, 14, const <int>[], const [], null, null)], <Type>[prefix1.Word, String, const m.TypeValue<List<String>>().type, List, const m.TypeValue<List<prefix2.WordType>>().type, List, prefix2.WordType, const m.TypeValue<List<prefix3.Topic>>().type, List, prefix3.Topic, bool, int, Type, Object, Invocation], 1, {r'==': (dynamic instance) => (x) => instance == x, r'toString': (dynamic instance) => instance.toString, r'noSuchMethod': (dynamic instance) => instance.noSuchMethod, r'hashCode': (dynamic instance) => instance.hashCode, r'runtimeType': (dynamic instance) => instance.runtimeType, r'text': (dynamic instance) => instance.text, r'meanings': (dynamic instance) => instance.meanings, r'wordTypes': (dynamic instance) => instance.wordTypes, r'topics': (dynamic instance) => instance.topics, r'pronunciation': (dynamic instance) => instance.pronunciation, r'examples': (dynamic instance) => instance.examples}, {r'text=': (dynamic instance, value) => instance.text = value, r'meanings=': (dynamic instance, value) => instance.meanings = value, r'wordTypes=': (dynamic instance, value) => instance.wordTypes = value, r'topics=': (dynamic instance, value) => instance.topics = value, r'pronunciation=': (dynamic instance, value) => instance.pronunciation = value, r'examples=': (dynamic instance, value) => instance.examples = value}, null, [])};


final _memberSymbolMap = null;

void _initializeReflectable(JsonMapperAdapter adapter) {
  if (!adapter.isGenerated) {
    return;
  }
  r.data = adapter.reflectableData!;
  r.memberSymbolMap = adapter.memberSymbolMap;
}

final mainGeneratedAdapter = JsonMapperAdapter(
  title: 'word_journey',
  url: 'package:word_journey/main.dart',
  reflectableData: _data,
  memberSymbolMap: _memberSymbolMap,
  valueDecorators: {
    typeOf<List<x0.Word>>(): (value) => value.cast<x0.Word>(),
    typeOf<Set<x0.Word>>(): (value) => value.cast<x0.Word>(),
    typeOf<List<x1.Topic>>(): (value) => value.cast<x1.Topic>(),
    typeOf<Set<x1.Topic>>(): (value) => value.cast<x1.Topic>(),
    typeOf<List<x2.WordType>>(): (value) => value.cast<x2.WordType>(),
    typeOf<Set<x2.WordType>>(): (value) => value.cast<x2.WordType>()
},
  enumValues: {
    x1.Topic: x1.Topic.values,
    x2.WordType: x2.WordType.values
});

Future<JsonMapper> initializeJsonMapperAsync({Iterable<JsonMapperAdapter> adapters = const [], SerializationOptions? serializationOptions, DeserializationOptions? deserializationOptions}) => Future(() => initializeJsonMapper(adapters: adapters, serializationOptions: serializationOptions, deserializationOptions: deserializationOptions));

JsonMapper initializeJsonMapper({Iterable<JsonMapperAdapter> adapters = const [], SerializationOptions? serializationOptions, DeserializationOptions? deserializationOptions}) {
  JsonMapper.globalSerializationOptions = serializationOptions ?? JsonMapper.globalSerializationOptions;
  JsonMapper.globalDeserializationOptions = deserializationOptions ?? JsonMapper.globalDeserializationOptions;    
  JsonMapper.enumerateAdapters([...adapters, mainGeneratedAdapter], (JsonMapperAdapter adapter) {
    _initializeReflectable(adapter);
    JsonMapper().useAdapter(adapter);
  });
  return JsonMapper();
}